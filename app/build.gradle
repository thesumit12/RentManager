apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: "../gradle/jacoco.gradle"

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.mvvmtemplete"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            testCoverageEnabled true
            ext.alwaysUpdateBuildId = false
        }
        release {
            crunchPngs false
            testCoverageEnabled true
            minifyEnabled true
        }
    }

    lintOptions {
        quiet true
        xmlReport false
        checkDependencies false
        abortOnError true
        checkAllWarnings true
        warningsAsErrors true

        disable "NewerVersionAvailable" // Since we are using latest.release, this check fails.
        disable "GradleDependency"      //  Since we are using latest.release, this check fails.
        disable "ObsoleteLintCustomCheck"
        disable "MissingRegistered"
    }

    dexOptions {
        preDexLibraries false
        maxProcessCount 4
        javaMaxHeapSize "2g"
    }

    // Always show the result of every unit test, even if it passes.
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }

        //execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    dataBinding {
        enabled true
    }
    packagingOptions {
        pickFirst 'mockito-extensions/org.mockito.plugins.MockMaker'
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 240, 'hours'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk$rootProject.kotlinJDKVersion:latest.release"


    sharedSupportLibraries dependencies

    testImplementation 'junit:junit:latest.release'
    androidTestImplementation 'androidx.test:runner:latest.release'
    androidTestImplementation "androidx.test:rules:latest.release"

    // Leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"

    //ANR Watch
    implementation "com.github.anrwatchdog:anrwatchdog:latest.release"

    //android architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleExtensionVersion"

    // Coroutine dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"

    //Kotlin-Koin
    implementation "org.koin:koin-android:$rootProject.kotlinKoinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$rootProject.kotlinKoinVersion"
    implementation "com.google.code.gson:gson:latest.release"

    implementation project(path: ':logging')
    implementation project(path: ':components')
    implementation project(path: ':common')
    implementation project(path: ':model')
    implementation project(path: ':di')
    //implementation project(path: ':network')
    implementation project(path: ':database')

    androidTestImplementation "org.koin:koin-test:$rootProject.kotlinKoinVersion"
    androidTestImplementation "org.mockito:mockito-android:latest.release"

    androidTestImplementation 'androidx.test:runner:latest.release'
    androidTestUtil 'androidx.test:orchestrator:latest.release'
    androidTestImplementation 'androidx.test.espresso:espresso-core:latest.release'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:latest.release"
    androidTestImplementation "androidx.test.espresso:espresso-intents:latest.release"
    androidTestImplementation "androidx.test:rules:latest.release"
    androidTestImplementation "com.nhaarman:mockito-kotlin:latest.release", { exclude group: 'org.jetbrains.kotlin' }

    androidTestImplementation "com.agoda.kakao:kakao:latest.release" // simple DSL for Espresso in kotlin
    androidTestImplementation "androidx.test.uiautomator:uiautomator:latest.release"


    if (fullBuild) {
        /*implementation project(path: ':chat')
        implementation project(path: ':lists')
        implementation project(path: ':groups')
        implementation project(path: ':map')
        implementation project(path: ':authentication')
        implementation project(path: ':profile')
        implementation project(path: ':search')*/
    } else {
        // include your local dependencies.
    }
}
